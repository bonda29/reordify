version: '3.8'

services:
  app:
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - JDBC_DATABASE_URL=jdbc:postgresql://postgres:5432/spotify_db
      - JDBC_DATABASE_USERNAME=root
      - JDBC_DATABASE_PASSWORD=root
    depends_on:
      - postgres
      - flyway
    networks:
      - backend_net
      - monitoring_net

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: spotify_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "root" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend_net
    ports:
      - "5432:5432"

  flyway:
    image: flyway/flyway:latest
    command:
      - -url=jdbc:postgresql://postgres:5432/spotify_db
      - -schemas=public
      - -user=root
      - -password=root
      - -baselineOnMigrate=true
      - migrate
    volumes:
      - ../src/main/resources/db/migration:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend_net

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ../src/main/resources/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ../src/main/resources/prometheus/alerts.yml:/etc/prometheus/alerts.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring_net

  grafana:
    image: grafana/grafana-enterprise:latest
    environment:
      GF_SECURITY_ADMIN_PASSWORD: secret
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring_net

volumes:
  pgdata:

networks:
  backend_net:
  monitoring_net:
